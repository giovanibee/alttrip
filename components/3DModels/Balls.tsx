/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
*/

import * as THREE from 'three'
import React from 'react'
import { useGLTF } from '@react-three/drei'
import { GLTF } from 'three-stdlib'

type GLTFResult = GLTF & {
	nodes: {
		Sphere: THREE.Mesh
		Sphere001: THREE.Mesh
		Sphere002: THREE.Mesh
		Sphere003: THREE.Mesh
		Sphere004: THREE.Mesh
		Sphere005: THREE.Mesh
		Sphere006: THREE.Mesh
		Sphere007: THREE.Mesh
		Plane: THREE.Mesh
		Plane001: THREE.Mesh
		Plane002: THREE.Mesh
		Plane003: THREE.Mesh
		Plane004: THREE.Mesh
		Plane005: THREE.Mesh
		Plane006: THREE.Mesh
		Plane007: THREE.Mesh
	}
	materials: {
		Glass: THREE.MeshPhysicalMaterial
		Foil: THREE.MeshStandardMaterial
		Ice: THREE.MeshPhysicalMaterial
		Ice2: THREE.MeshPhysicalMaterial
		Gold: THREE.MeshStandardMaterial
		IceCracked: THREE.MeshStandardMaterial
		Bronze: THREE.MeshStandardMaterial
		Iron: THREE.MeshStandardMaterial
	}
}

export function GlassBall() {
	const { nodes, materials } = useGLTF('/models/balls/balls.glb') as GLTFResult
	materials.Glass.color.set('teal')
	materials.Glass.transparent = true
	return (
		<mesh
			castShadow
			receiveShadow
			geometry={nodes.Sphere.geometry}
			material={materials.Glass}
		/>
	)
}

export function WireframeBall() {
	return (
		<mesh castShadow receiveShadow>
			<sphereGeometry args={[1, 32, 32]} />
			<meshStandardMaterial
				color="white"
				metalness={0.1}
				roughness={0.5}
				wireframe
			/>
		</mesh>
	)
}

export function IceBall() {
	const { nodes, materials } = useGLTF('/models/balls/balls.glb') as GLTFResult
	return (
		<mesh
			receiveShadow
			geometry={nodes.Sphere002.geometry}
			material={materials.Ice}
		/>
	)
}

export function Ice2Ball() {
	const { nodes, materials } = useGLTF('/models/balls/balls.glb') as GLTFResult
	return (
		<mesh
			receiveShadow
			geometry={nodes.Sphere003.geometry}
			material={materials.Ice2}
		/>
	)
}

export function GoldBall() {
	const { nodes, materials } = useGLTF('/models/balls/balls.glb') as GLTFResult
	return (
		<mesh
			receiveShadow
			geometry={nodes.Sphere004.geometry}
			material={materials.Gold}
		/>
	)
}

export function IceCrackedBall() {
	const { nodes, materials } = useGLTF('/models/balls/balls.glb') as GLTFResult
	return (
		<mesh
			receiveShadow
			geometry={nodes.Sphere005.geometry}
			material={materials.IceCracked}
		/>
	)
}

export function BronzeBall() {
	const { nodes, materials } = useGLTF('/models/balls/balls.glb') as GLTFResult
	return (
		<mesh
			receiveShadow
			geometry={nodes.Sphere006.geometry}
			material={materials.Bronze}
		/>
	)
}

export function IronBall() {
	const { nodes, materials } = useGLTF('/models/balls/balls.glb') as GLTFResult
	return (
		<mesh
			receiveShadow
			geometry={nodes.Sphere007.geometry}
			material={materials.Iron}
		/>
	)
}

useGLTF.preload('/models/balls/balls.glb')
