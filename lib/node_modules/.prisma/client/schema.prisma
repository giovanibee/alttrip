generator client {
  provider = "prisma-client-js"
  output   = "../node_modules/.prisma/client"
}

datasource db {
  provider          = "postgresql"
  url               = env("POSTGRES_PRISMA_URL")
  directUrl         = env("POSTGRES_URL_NON_POOLING")
  shadowDatabaseUrl = env("DATABASE_URL")
}

model Place {
  id          Int       @id @default(autoincrement())
  description String?
  hasBeenVisited Boolean?   @default(false)
  location    Decimal[] @default([43.09674, -89.51127])
  name        String
  owner       User      @relation(fields: [userId], references: [id])
  rating      Int?      @default(0)
  tasks       Task[]
  userId      Int       @unique

  @@unique([name, userId])
}

model Quest {
  id          Int     @id @default(autoincrement())
  description String?
  name        String
  owner       User    @relation(fields: [userId], references: [id])
  task        Task[]
  userId      Int     @unique

  @@unique([name, userId])
}

model Task {
  id             Int       @id @default(autoincrement())
  description    String?
  name           String    @default("New Task")
  place          Place?    @relation(fields: [placeId], references: [id])
  placeId        Int?      @unique
  quest          Quest     @relation(fields: [questId], references: [id])
  questId        Int

  @@unique([name, questId])
}

model User {
  id          Int     @id @default(autoincrement())
  email       String? @unique
  name        String
  phoneNumber String? @unique
  password    String
  places      Place[]
  quests      Quest[]
}
