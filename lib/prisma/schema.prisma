generator client {
  provider = "prisma-client-js"
  output   = "../node_modules/.prisma/client"
}

datasource db {
  provider          = "postgresql"
  url               = env("POSTGRES_PRISMA_URL")
  directUrl         = env("POSTGRES_URL_NON_POOLING")
  shadowDatabaseUrl = env("DATABASE_URL")
}

model Story {
  id                    Int           @id @default(autoincrement())
  description           String?
  name                  String
  owner                 User          @relation(fields: [userId], references: [id])
  chapters              Chapter[]
  userId                Int           @unique
  savedStories          SavedStories[]

  @@unique([name, userId])
}

model Chapter {
  id          Int     @id @default(autoincrement())
  description String
  details     String
  favor       String?
  latitude    Float
  longitude   Float
  name        String  @default("New Task")
  passcode    String?
  order       Int
  secretText  String?
  story       Story   @relation(fields: [storyId], references: [id])
  storyId     Int

  completedChapters      CompletedChapters[]
  inProgressChapters     InProgressChapters[]

  @@unique([name, storyId])
  @@unique([order, storyId])
}

model CompletedChapters {
  completedChapterId Int
  chapters           Chapter[]
  completedById      Int
  completedBy        User      @relation(fields: [completedById], references: [id])

  @@id(completedById)
}

model InProgressChapters {
  inProgressChapterId Int
  chapters            Chapter[]
  inProgressById      Int
  inProgressBy        User      @relation(fields: [inProgressById], references: [id])

  @@id(inProgressById)
}

model InviteCode {
  id        Int     @id @default(autoincrement())
  code      String  @unique
  isRedeemed  Boolean @default(false)
}

model SavedStories {
  savedStoryId Int
  stories      Story[]
  savedById    Int  @id
  savedBy      User @relation(fields: [savedById], references: [id])
}

model User {
  id          Int     @id @default(autoincrement())
  email       String  @unique
  name        String
  password    String

  createdStories Story[]

  completedChapters  CompletedChapters?
  inProgressChapters InProgressChapters?
  savedStories       SavedStories?
}
